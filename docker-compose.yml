version: '3.7'
services:
  consul-server1:
    image: hashicorp/consul:1.11.2
    container_name: consul-server1
    restart: always
    volumes:
      - ./config/consul/server1.json:/consul/config/server1.json:ro
      - consul-server1_data:/consul/data
    networks:
      - consul
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    command: "agent -bootstrap-expect=3"

  consul-server2:
    image: hashicorp/consul:1.11.2
    container_name: consul-server2
    restart: always
    volumes:
      - ./config/consul/server2.json:/consul/config/server2.json:ro
      - consul-server2_data:/consul/data
    networks:
      - consul
    command: "agent -bootstrap-expect=3"

  consul-server3:
    image: hashicorp/consul:1.11.2
    container_name: consul-server3
    restart: always
    volumes:
      - ./config/consul/server3.json:/consul/config/server3.json:ro
      - consul-server3_data:/consul/data
    networks:
      - consul
    command: "agent -bootstrap-expect=3"

  consul-client:
    image: hashicorp/consul:1.11.2
    container_name: consul-client
    restart: always
    volumes:
      - ./config/consul/client.json:/consul/config/client.json:ro
      - consul-client_data:/consul/data
    networks:
      - consul
    command: "agent"

  keycloak:
    image: quay.io/keycloak/keycloak:legacy
    restart: always
    env_file:
      - ./env/keycloack.env
      - ./env/keycloack-secrets.env
    ports:
      - "8880:8080"
    depends_on:
      - keycloak-db

  keycloak-db:
    image: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./env/keycloack-db.env
      - ./env/keycloack-db-secrets.env
    ports:
      - "5432:5432"
  gateway:
    image: kirillesau/minerva-gateway:latest
    restart: always
    ports:
      - "8690:8080"
    environment:
      - SPRING_CLOUD_CONSUL_HOST=consul-server1
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - consul

  minerva-absence:
    image: kirillesau/minerva-absence:latest
    restart: always
    environment:
      - SPRING_CLOUD_CONSUL_HOST=consul-server1
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - consul

networks:
  consul:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  consul-server1_data:
    driver: local
  consul-server2_data:
    driver: local
  consul-server3_data:
    driver: local
  consul-client_data:
    driver: local